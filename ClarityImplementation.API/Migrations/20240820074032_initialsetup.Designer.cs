// <auto-generated />
using System;
using ClarityImplementation.API.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClarityImplementation.API.Migrations
{
    [DbContext(typeof(ClarityDbContext))]
    [Migration("20240820074032_initialsetup")]
    partial class initialsetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClarityImplementation.API.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.AffiliatedCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffiliateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNameForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNameForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumberForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumberForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumberForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumberForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COBRAFundingFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EINNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeBenefitsFundingFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerEntityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBrokerorPartnerPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBrokerorPartnerPaymentForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCompanyDivision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCreditCobraPremiumRemittance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitConsumerBenefitFunding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitConsumerBenefitFundingForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitMonthlyAdministrationFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitMonthlyAdministrationFeeForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("AffiliatedCompanies");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.AffiliatedCompanyDivision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AffiliatedCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("BankAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNameForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNameForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumberForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumberForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumberForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumberForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COBRAFundingFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeBenefitsFundingFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBrokerorPartnerPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBrokerorPartnerPaymentForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCreditCobraPremiumRemittance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitConsumerBenefitFunding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitConsumerBenefitFundingForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitMonthlyAdministrationFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitMonthlyAdministrationFeeForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AffiliatedCompanyId");

                    b.ToTable("AffiliatedCompanyDivisions");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.AffiliatedCompanyDivisionFundingFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AffiliatedCompanyDivisionId")
                        .HasColumnType("int");

                    b.Property<string>("UploadedFileURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AffiliatedCompanyDivisionId");

                    b.ToTable("AffiliatedCompanyDivisionFundingFiles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.AffiliatedCompanyFundingFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AffiliatedCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("UploadedFileURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AffiliatedCompanyId");

                    b.ToTable("AffiliatedCompanyFundingFiles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.ApiCaseContactChangeRequest", b =>
                {
                    b.Property<int>("CaseContactChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("case_contact_change_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaseContactChangeId"));

                    b.Property<string>("CaseContactId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("case_contact_id");

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseSubType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("case_sub_type");

                    b.Property<string>("CaseType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("case_type");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("contact_email");

                    b.Property<string>("ContactFirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("contact_first_name");

                    b.Property<bool>("ContactIsBenAdminContact")
                        .HasColumnType("bit")
                        .HasColumnName("contact_is_ben_admin_contact");

                    b.Property<bool>("ContactIsCobraContact")
                        .HasColumnType("bit")
                        .HasColumnName("contact_is_cobra_contact");

                    b.Property<bool>("ContactIsConsBenContact")
                        .HasColumnType("bit")
                        .HasColumnName("contact_is_cons_ben_contact");

                    b.Property<string>("ContactLastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("contact_last_name");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("contact_phone");

                    b.Property<string>("ContactSubType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_sub_type");

                    b.Property<string>("ContactTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_title");

                    b.Property<string>("ContactType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_type");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("created_by");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("employer_name");

                    b.Property<string>("OrganizationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("organization_name");

                    b.Property<string>("OrganizationState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("organization_state");

                    b.Property<string>("OrganizationZip")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("organization_zip");

                    b.Property<string>("RequestedByEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("requested_by_email");

                    b.Property<string>("SfCaseOwnerUserId")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("sf_case_owner_user_id");

                    b.Property<string>("SfContactId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sf_contact_id");

                    b.Property<string>("SfTaskId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("sf_task_id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("updated_by");

                    b.Property<int?>("VersionNo")
                        .HasColumnType("int")
                        .HasColumnName("version_no");

                    b.HasKey("CaseContactChangeId");

                    b.ToTable("api_case_contact_change_requests");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Api_Case", b =>
                {
                    b.Property<string>("CaseId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_status");

                    b.Property<string>("CaseSubType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_sub_type");

                    b.Property<string>("CaseType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_type");

                    b.Property<string>("Case_Implementation_Contact_Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_implementation_contact_email");

                    b.Property<string>("Case_Implementation_Contact_First_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_implementation_contact_first_name");

                    b.Property<string>("Case_Implementation_Contact_Last_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_implementation_contact_last_name");

                    b.Property<string>("Case_Owner_Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_owner_email");

                    b.Property<string>("Case_Owner_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_owner_name");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("city");

                    b.Property<int?>("ClientAnnualRevenue")
                        .HasColumnType("int")
                        .HasColumnName("client_annual_revenue");

                    b.Property<string>("CobraPlanEmployeeClass")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cobra_plan_employee_class");

                    b.Property<string>("CobraPlanEnrollmentDataTransmissionToClarity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cobra_plan_enrollment_data_transmission_to_clarity");

                    b.Property<string>("CobraPlanEnrollmentMethodEmployees")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cobra_plan_enrollment_method_employees");

                    b.Property<string>("CobraPlanEstimatedDateEnrollmentDataDelivery")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cobra_plan_estimated_date_enrollment_data_delivery");

                    b.Property<DateTime?>("CobraPlanFirstPayrollDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("cobra_plan_first_payroll_date");

                    b.Property<DateTime?>("CobraPlanOpenEnrollmentEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("cobra_plan_open_enrollment_end_date");

                    b.Property<DateTime?>("CobraPlanOpenEnrollmentStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("cobra_plan_open_enrollment_start_date");

                    b.Property<int?>("CobraPlanParkingTransitWaitingPeriod")
                        .HasColumnType("int")
                        .HasColumnName("cobra_plan_parking_transit_waiting_period");

                    b.Property<int?>("CobraPlanQualifiedDependents")
                        .HasColumnType("int")
                        .HasColumnName("cobra_plan_qualified_dependents");

                    b.Property<string>("CobraPlanType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cobra_plan_type");

                    b.Property<int?>("CobraPlanWaitingPeriod")
                        .HasColumnType("int")
                        .HasColumnName("cobra_plan_waiting_period");

                    b.Property<string>("CobraSubmissionStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cobra_submission_status");

                    b.Property<string>("ConsBenFundingMethod")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cons_ben_funding_method");

                    b.Property<bool?>("ConsBenHasRolPlan")
                        .HasColumnType("bit")
                        .HasColumnName("cons_ben_has_rol_plan");

                    b.Property<int?>("ConsBenNumberOfBenefitEligibleEmployees")
                        .HasColumnType("int")
                        .HasColumnName("cons_ben_number_of_benefit_eligible_employees");

                    b.Property<int?>("ConsBenNumberOfParticipatingEmployees")
                        .HasColumnType("int")
                        .HasColumnName("cons_ben_number_of_participating_employees");

                    b.Property<string>("ConsBenPlanEmployeeClass")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cons_ben_plan_employee_class");

                    b.Property<string>("ConsBenPlanEnrollmentDataTransmissionToClarity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cons_ben_plan_enrollment_data_transmission_to_clarity");

                    b.Property<string>("ConsBenPlanEnrollmentMethodEmployees")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cons_ben_plan_enrollment_method_employees");

                    b.Property<string>("ConsBenPlanEnrollmentTemplate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cons_ben_plan_enrollment_template");

                    b.Property<string>("ConsBenPlanEnrollmentTemplateTpaName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cons_ben_plan_enrollment_template_tpa_name");

                    b.Property<string>("ConsBenPlanEstimatedDateEnrollmentDataDelivery")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cons_ben_plan_estimated_date_enrollment_data_delivery");

                    b.Property<DateTime?>("ConsBenPlanFirstPayrollDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("cons_ben_plan_first_payroll_date");

                    b.Property<DateTime?>("ConsBenPlanOpenEnrollmentEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("cons_ben_plan_open_enrollment_end_date");

                    b.Property<DateTime?>("ConsBenPlanOpenEnrollmentStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("cons_ben_plan_open_enrollment_start_date");

                    b.Property<int?>("ConsBenPlanParkingTransitWaitingPeriod")
                        .HasColumnType("int")
                        .HasColumnName("cons_ben_plan_parking_transit_waiting_period");

                    b.Property<string>("ConsBenPlanPayrollGroup")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cons_ben_plan_payroll_group");

                    b.Property<int?>("ConsBenPlanQualifiedDependents")
                        .HasColumnType("int")
                        .HasColumnName("cons_ben_plan_qualified_dependents");

                    b.Property<string>("ConsBenPlanType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cons_ben_plan_type");

                    b.Property<int?>("ConsBenPlanWaitingPeriod")
                        .HasColumnType("int")
                        .HasColumnName("cons_ben_plan_waiting_period");

                    b.Property<string>("ConsBenSubmissionStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cons_ben_submission_status");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("CrmUserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("crm_user_id");

                    b.Property<string>("Dba")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dba");

                    b.Property<string>("DentalCareCarrier")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dental_care_carrier");

                    b.Property<string>("DentalCarePlanType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dental_care_plan_type");

                    b.Property<string>("EmployerDivisionName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("employer_division_name");

                    b.Property<string>("EmployerId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("employer_id");

                    b.Property<string>("EmployerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("employer_name");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fax");

                    b.Property<string>("FileUploadReminderStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_upload_reminder_status");

                    b.Property<int?>("FormCurrPageNo")
                        .HasColumnType("int")
                        .HasColumnName("form_curr_page_no");

                    b.Property<string>("FormEntryId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("form_entry_id");

                    b.Property<string>("FormFinalJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("form_final_json");

                    b.Property<string>("FormFinalSummary")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("form_final_summary");

                    b.Property<string>("FormInitialJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("form_initial_json");

                    b.Property<string>("FormInitialSummary")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("form_initial_summary");

                    b.Property<string>("FormInviteToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("form_invite_token");

                    b.Property<string>("FormPin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("form_pin");

                    b.Property<string>("FormType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("form_type");

                    b.Property<string>("FormUserSubmission")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("form_user_sumbission");

                    b.Property<string>("FormUserSubmissionJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("form_user_sumbission_json");

                    b.Property<string>("Funding_Submission_Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("funding_submission_status");

                    b.Property<string>("HealthcareCarrier")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("healthcare_carrier");

                    b.Property<string>("HealthcarePlanType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("healthcare_plan_type");

                    b.Property<DateTime>("ImplementationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("implementation_date");

                    b.Property<string>("ImplementationPlanType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("implementation_plan_type");

                    b.Property<string>("IncorporationDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("incorporation_date");

                    b.Property<bool?>("IsReadyForProcessing")
                        .HasColumnType("bit")
                        .HasColumnName("is_ready_for_processing");

                    b.Property<bool?>("IsUsedForTesting")
                        .HasColumnType("bit")
                        .HasColumnName("is_used_for_testing");

                    b.Property<string>("KickoffCallSubmissionStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kickoff_call_submission_status");

                    b.Property<string>("LastRolloutError")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_rollout_error");

                    b.Property<string>("LastUpdatedFrom")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_updated_from");

                    b.Property<string>("LawsOfState")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("laws_of_state");

                    b.Property<string>("LegalBusinessName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("legal_business_name");

                    b.Property<string>("MemberEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("member_email");

                    b.Property<string>("MemberFirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("member_first_name");

                    b.Property<string>("MemberLastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("member_last_name");

                    b.Property<string>("PayrollProvider")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payroll_provider");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<string>("PortalCaseEditUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("portal_case_edit_url");

                    b.Property<string>("SalesRepName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sales_rep_name");

                    b.Property<string>("SfAccountNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_account_no");

                    b.Property<string>("SfCaseId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_case_id");

                    b.Property<string>("SfCaseOwnerUserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_case_owner_user_id");

                    b.Property<string>("SfNewTaskId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_new_task_id");

                    b.Property<string>("SfNewTaskId2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_new_task_id_2");

                    b.Property<string>("SfNewTaskId3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_new_task_id_3");

                    b.Property<string>("SfNewTaskId4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_new_task_id_4");

                    b.Property<string>("SfNewTaskId5")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_new_task_id_5");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("state");

                    b.Property<DateTime?>("StatusLastCancelledAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("status_last_cancelled_at");

                    b.Property<DateTime?>("StatusLastCompletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("status_last_completed_at");

                    b.Property<string>("Step0Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step0_status");

                    b.Property<string>("Step10Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step10_status");

                    b.Property<string>("Step1Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step1_status");

                    b.Property<string>("Step2Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step2_status");

                    b.Property<string>("Step3Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step3_status");

                    b.Property<string>("Step4Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step4_status");

                    b.Property<string>("Step5Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step5_status");

                    b.Property<DateTime?>("Step6EntryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("step_6_entry_date");

                    b.Property<string>("Step6Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step6_status");

                    b.Property<string>("Step7Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step7_status");

                    b.Property<string>("Step8Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step8_status");

                    b.Property<string>("Step9Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("step9_status");

                    b.Property<string>("StreetLine2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("street_line2");

                    b.Property<string>("StreetPhysicalAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("street_physical_address");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.Property<int?>("VersionNo")
                        .HasColumnType("int")
                        .HasColumnName("version_no");

                    b.Property<string>("VisionCareCarrier")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vision_care_carrier");

                    b.Property<string>("VisionCarePlanType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vision_care_plan_type");

                    b.Property<string>("WebAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("web_address");

                    b.Property<int?>("WizardCurrStepNo")
                        .HasColumnType("int")
                        .HasColumnName("wizard_curr_step_no");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("zip");

                    b.HasKey("CaseId");

                    b.ToTable("api_cases");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Api_Case_Contact", b =>
                {
                    b.Property<string>("CaseContactId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("case_contact_id");

                    b.Property<string>("BenefitPlanType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("benefit_plan_type");

                    b.Property<string>("CaseId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_id");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_email");

                    b.Property<string>("ContactEmailOrg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_email_org");

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_first_name");

                    b.Property<int?>("ContactIsBenAdminContact")
                        .HasColumnType("int")
                        .HasColumnName("contact_is_ben_admin_contact");

                    b.Property<int?>("ContactIsCobraContact")
                        .HasColumnType("int")
                        .HasColumnName("contact_is_cobra_contact");

                    b.Property<int?>("ContactIsConsBenContact")
                        .HasColumnType("int")
                        .HasColumnName("contact_is_cons_ben_contact");

                    b.Property<int?>("ContactIsImplementationContact")
                        .HasColumnType("int")
                        .HasColumnName("contact_is_implementation_contact");

                    b.Property<int?>("ContactIsParticipantContact")
                        .HasColumnType("int")
                        .HasColumnName("contact_is_participant_contact");

                    b.Property<string>("ContactLastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_last_name");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_phone");

                    b.Property<string>("ContactSubType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_sub_type");

                    b.Property<string>("ContactTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_title");

                    b.Property<string>("ContactType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_type");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("IsCaseCollaborator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("is_case_collaborator");

                    b.Property<string>("IsInvited")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("is_invited");

                    b.Property<string>("IsPrimaryContact")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("is_primary_contact");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("organization_name");

                    b.Property<string>("OrganizationState")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("organization_state");

                    b.Property<string>("OrganizationZip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("organization_zip");

                    b.Property<string>("Responsibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SfContactId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_contact_id");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.Property<int?>("VersionNo")
                        .HasColumnType("int")
                        .HasColumnName("version_no");

                    b.HasKey("CaseContactId");

                    b.HasIndex("CompanyId");

                    b.ToTable("api_case_contacts");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Api_File_Upload", b =>
                {
                    b.Property<int>("FileUploadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("file_upload_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileUploadId"));

                    b.Property<string>("CaseId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseSubtype")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_sub_type");

                    b.Property<string>("CaseType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_type");

                    b.Property<string>("CheckerResults")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("checker_results");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("EmployerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("employer_name");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_name");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_status");

                    b.Property<string>("PlatformName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("platform_name");

                    b.Property<string>("PlatformTempleteName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("platform_template_name");

                    b.Property<string>("SfCaseOwnerUserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_case_owner_user_id");

                    b.Property<string>("SfNewTaskId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_new_task_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UploadErrors")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("upload_errors");

                    b.Property<string>("UploadResults")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("upload_results");

                    b.Property<string>("UploadedByUserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("uploaded_by_user_id");

                    b.Property<string>("UserUploadedFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_uploaded_file_name");

                    b.HasKey("FileUploadId");

                    b.ToTable("api_file_uploads");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Api_Notification_Log", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("CaseId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_id");

                    b.Property<string>("CaseOwnerId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_owner_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("DestinationAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("destination_address");

                    b.Property<string>("MailboxAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mailbox_address");

                    b.Property<string>("MailboxFolderName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mailbox_folder_name");

                    b.Property<string>("MailboxUId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mailbox_uid");

                    b.Property<string>("NotificationCategory")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notification_category");

                    b.Property<string>("NotificationContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notification_content");

                    b.Property<string>("NotificationLabel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notification_label");

                    b.Property<DateTime?>("NotificationSentAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("notification_sent_at");

                    b.Property<string>("NotificationSource")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notification_source");

                    b.Property<string>("NotificationStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notification_status");

                    b.Property<string>("NotificationSubCategory")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notification_sub_category");

                    b.Property<string>("NotificationType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notification_type");

                    b.Property<string>("SfTaskId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_task_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_id");

                    b.HasKey("NotificationId");

                    b.ToTable("api_notification_logs");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.BrokerContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrokerageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseContactId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_contact_id");

                    b.Property<string>("CaseId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactIsImplementationContact")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsInvite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPrimaryContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryContactChecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SFContactId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_contact_id");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("BrokerContacts");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.BrokerRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BrokerRoles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Communication.AccessEmployeeCommunication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccessEmployeeCommunications");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenefitReviewStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenefitStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendlyUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseOwnerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientAnnualRevenue")
                        .HasColumnType("int");

                    b.Property<string>("CobraReviewStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CobraStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyProfileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTotalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompletedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 8, 20, 13, 10, 32, 616, DateTimeKind.Local).AddTicks(5540));

                    b.Property<string>("CrmUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FundingReviewStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FundingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImplementationPlans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsAffiliatedCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCompanyDivision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsEmailSent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsReadyForProcessing")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsedForTesting")
                        .HasColumnType("bit");

                    b.Property<string>("KickoffStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KickoffUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastRolloutError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PendingProgress")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("Reminder1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Reminder1SentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reminder2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Reminder2SentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reminder3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Reminder3SentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesRepName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StatusUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TotalFundingProgress")
                        .HasColumnType("int");

                    b.Property<int>("TotalPlanProgress")
                        .HasColumnType("int");

                    b.Property<int>("TotalProgress")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadEnrollEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadEnrollEmailDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadEnrollReminder1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadEnrollReminder1Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadEnrollReminder2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadEnrollReminder2Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadEnrollReminder3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadEnrollReminder3Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("case_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("case_implementation_contact_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("case_implementation_contact_first_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("case_implementation_contact_last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sf_case_id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies", t =>
                        {
                            t.HasTrigger("trg_UpdateCobraStatusField");

                            t.HasTrigger("trg_UpdateCompanyStatusField");

                            t.HasTrigger("trg_UpdateEBStatusField");

                            t.HasTrigger("trg_UpdateFundingStatusField");
                        });
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.CompanyContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CaseContactId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_contact_id");

                    b.Property<string>("CaseId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("case_id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactIsImplementationContact")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsInvite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPrimaryContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SFContactId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sf_contact_id");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyContacts");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.CompanyDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DBA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EINNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibleEmployees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerEntityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImplementationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImplementationPlanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncorporationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncorporationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("CompanyDetails");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.CompanyDivision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNameForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNameForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumberForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumberForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumberForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumberForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COBRAFundingFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeBenefitsFundingFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBrokerorPartnerPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBrokerorPartnerPaymentForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCreditCobraPremiumRemittance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitConsumerBenefitFunding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitConsumerBenefitFundingForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitMonthlyAdministrationFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitMonthlyAdministrationFeeForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyDivisions");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.CompanyDivisionFundingFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyDivisionId")
                        .HasColumnType("int");

                    b.Property<string>("UploadedFileURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyDivisionId");

                    b.ToTable("CompanyDivisionFundingFiles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.CompanyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("StatusType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyStatuses");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.ContactResponsibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactResponsibilities");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.ContactRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactRoles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseOwnerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseOwnerFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseOwnerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EmailSentdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImplementationContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isemail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfDays")
                        .HasColumnType("int");

                    b.Property<int>("NoOfReminders")
                        .HasColumnType("int");

                    b.Property<string>("PositionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.EmployerEntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployerEntityTypes");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Event.CalendlyEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("answer_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("answer_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("assigned_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_end_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_start_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_type_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("event_type_uuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("invitee_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("invitee_full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("invitee_uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("CalendlyEvents");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.CobraBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeBenefitsFileUploadId")
                        .HasColumnType("int");

                    b.Property<string>("FileCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsFileUploadId");

                    b.ToTable("CobraBenefits");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.CobraFileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CobraBenefitId")
                        .HasColumnType("int");

                    b.Property<string>("FileCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadedFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CobraBenefitId");

                    b.ToTable("CobraFileUploads");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.EmployeeBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeBenefitsFileUploadId")
                        .HasColumnType("int");

                    b.Property<string>("FileCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsFileUploadId");

                    b.ToTable("EmployeeBenefits");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.EmployeeBenefitsFileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("IsEnrollmentTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("EmployeeBenefitsFileUploads");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.EmployeeBenefitsFileUploadItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeBenefitId")
                        .HasColumnType("int");

                    b.Property<string>("FileCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitId");

                    b.ToTable("EmployeeBenefitsFileUploadItems");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Funding.COBRAFunding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNameForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNameForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumberForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumberForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumberForAdminFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumberForCreditCobra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrokerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrokerFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrokerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COBRAPremiumProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CobraDefaultFundingFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CobraDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CobraSignatureDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CobraSignatureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CobraSignatureTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("IsBrokerorPartnerPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCobraACHFormChecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCreditCobraPremiumRemittance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitMonthlyAdministrationFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsRequiredSeparateRemittance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<int>("TotalFundingProgress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("COBRAFundings");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Funding.COBRAFundingFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CobraFundingId")
                        .HasColumnType("int");

                    b.Property<string>("CobraPremiumProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CobraUploadedFileURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CobraFundingId");

                    b.ToTable("COBRAFundingFiles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Funding.EmployeeBenefitsFunding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNameForBenefitFunding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNameForClarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumberForBenefitFunding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumberForClarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumberForBenefitFunding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRoutingNumberForClarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientFundingFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FundingDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FundingModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsACHFormChecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBrokerorPartnerPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBrokerorPartnerPaymentForClarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBrokerorPartnerPaymentForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsClarityRequiredSeparateAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsClientRequiredSeparateAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitConsumerBenefitFunding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitConsumerBenefitFundingForClarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitConsumerBenefitFundingForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitMonthlyAdministrationFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitMonthlyAdministrationFeeForClarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDebitMonthlyAdministrationFeeForClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnAccountFundingDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("SignatureDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalFundingProgress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("EmployeeBenefitsFundings");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Funding.EmployeeBenefitsFundingFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeBenefitsFundingId")
                        .HasColumnType("int");

                    b.Property<string>("FundingModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadedFileURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsFundingId");

                    b.ToTable("EmployeeBenefitsFundingFiles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.IncorporationState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncorporationStates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Kickoff.KickoffUserData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CalendlyAPIKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendlyUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysSincePreviousEvent")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCalenderConnected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LifeTimeEvents")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PreviousEventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalEventsInLast30Days")
                        .HasColumnType("int");

                    b.Property<string>("VideoConferrencingIntegration")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KickoffUserDatas");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.PageMetaDataField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldMetaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<string>("Placeholder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tooltip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("PageMetaDataFields");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.ActiveEmployeeRunoutPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActiveEmployeeRunoutPeriods");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.BenefitPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BenefitPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.BenefitPlanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BenefitPlanTypes");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRABrokerContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnrollmentAndEligibilityContactId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnrollmentAndEligibilityContactId");

                    b.ToTable("COBRABrokerContacts");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAClientContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnrollmentAndEligibilityContactId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnrollmentAndEligibilityContactId");

                    b.ToTable("COBRAClientContacts");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRADentalPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("COBRAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eight34ContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncorporationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDisabilityExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDivisionSpecific")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRenewalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubGroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAPlanId");

                    b.ToTable("COBRADentalPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAEAPPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("COBRAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eight34ContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncorporationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDisabilityExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDivisionSpecific")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRenewalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubGroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAPlanId");

                    b.ToTable("COBRAEAPPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAFSAPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("COBRAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eight34ContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncorporationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDisabilityExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDivisionSpecific")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRenewalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubGroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAPlanId");

                    b.ToTable("COBRAFSAPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAHRAPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("COBRAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eight34ContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncorporationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDisabilityExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDivisionSpecific")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRenewalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubGroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAPlanId");

                    b.ToTable("COBRAHRAPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAInsurancePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("COBRAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eight34ContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncorporationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDisabilityExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDivisionSpecific")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRenewalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubGroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAPlanId");

                    b.ToTable("COBRAInsurancePlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAMedicalPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("COBRAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eight34ContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncorporationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDisabilityExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDivisionSpecific")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRenewalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubGroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAPlanId");

                    b.ToTable("COBRAMedicalPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("IsOpenEnrollment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("COBRAPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAVisionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("COBRAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eight34ContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncorporationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDisabilityExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDivisionSpecific")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRenewalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRateStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubGroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAPlanId");

                    b.ToTable("COBRAVisionPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.CobraGeneralInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("COBRAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("ClarityEventReceiptionMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentBenefitAdministrationPlatform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentPayrollPlatform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBenefitAdminPlatform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherPayrollPlatform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorContactFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorContactLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAPlanId")
                        .IsUnique();

                    b.ToTable("CobraGeneralInformations");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.CobraOpenEnrollmentManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("COBRAPlanId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfDaysOffered")
                        .HasColumnType("int");

                    b.Property<string>("OpenEnrollmentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAPlanId")
                        .IsUnique();

                    b.ToTable("cobraOpenEnrollmentManagements");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.DentalCoverageRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("COBRADentalPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CoverageLevelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DentalPlanId")
                        .HasColumnType("int");

                    b.Property<string>("FutureRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRADentalPlanId");

                    b.ToTable("DentalCoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.EAPCoverageRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("COBRAEAPPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CoverageLevelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EAPPlanId")
                        .HasColumnType("int");

                    b.Property<string>("FutureRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAEAPPlanId");

                    b.ToTable("EAPCoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.EnrollmentAndEligibilityContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BenefitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenefitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("COBRAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAPlanId")
                        .IsUnique();

                    b.ToTable("EnrollmentAndEligibilityContacts");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.FSACoverageRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("COBRAFSAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CoverageLevelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FSAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("FutureRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAFSAPlanId");

                    b.ToTable("FSACoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.HRACoverageRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("COBRAHRAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CoverageLevelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HRAPlanId")
                        .HasColumnType("int");

                    b.Property<string>("PriorRate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAHRAPlanId");

                    b.ToTable("HRACoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.InsurancePlanCoverageRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("COBRAInsurancePlanId")
                        .HasColumnType("int");

                    b.Property<string>("CoverageLevelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InsurancePlanId")
                        .HasColumnType("int");

                    b.Property<string>("PriorRate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAInsurancePlanId");

                    b.ToTable("InsurancePlanCoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.MedicalPlanCoverageRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("COBRAMedicalPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CoverageLevelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("COBRAMedicalPlanId");

                    b.ToTable("MedicalPlanCoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.VisionCoverageRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("COBRAVisionPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CoverageLevelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FutureRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisionPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("COBRAVisionPlanId");

                    b.ToTable("VisionCoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.DataTransmissionMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DataTransmissionMethods");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EBPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EBPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EligibilityDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EligibilityDefinitions");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsDCA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActiveEmployeeRunoutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowGracePeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeBenefitsFSAId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerContribution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCustomizePlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDCAChecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsStandardPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxAnnualElectionAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinAnnualElectionAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherOptionForActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherOptionForTerminated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunOutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminatedEmployeeCoverageEndPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminatedEmployeeRunoutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsFSAId")
                        .IsUnique();

                    b.ToTable("EmployeeBenefitsDCAs");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DataTransmissionMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeBenefitsPlanId")
                        .HasColumnType("int");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsPlanId")
                        .IsUnique();

                    b.ToTable("EmployeeBenefitsEnrollments");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsFSA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActiveEmployeeRunoutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowCarryOver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowGracePeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeBenefitsPlanId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerContribution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCustomizePlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsFSAChecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsHSA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsLPFSAChecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsOfferLPFSA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsStandardPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxAnnualElectionAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinAnnualElectionAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherOptionForActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherOptionForTerminated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunOutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminatedEmployeeCoverageEndPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminatedEmployeeRunoutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsPlanId")
                        .IsUnique();

                    b.ToTable("EmployeeBenefitsFSAs");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsGeneralInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AutopostOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientDepositOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContributionManagerOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeBenefitsPlanId")
                        .HasColumnType("int");

                    b.Property<string>("InformationProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformationProviderVendorContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformationProviderVendorContactFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformationProviderVendorContactLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformationProviderVendorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayrollProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayrollProviderContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayrollProviderFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayrollProviderLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayrollProviderOtherVendorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayrollProviderVendorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorDepositOption")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsPlanId")
                        .IsUnique();

                    b.ToTable("EmployeeBenefitsGeneralInformations");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsHRA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActiveDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActiveEmployeeRunoutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionalPlanDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClarityBenefitCardType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeBenefitsPlanId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeChild")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeSpouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HRAClaimPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HRAResponsibleEmployee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HRAResponsibleEmployeeChild")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HRAResponsibleEmployeeSpouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HRAResponsibleFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HRAType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HRAUnusedFund")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDependentCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsDependentCardOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsEmployeeResponsible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsHRAEmployeeResponsible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsHRAorFSA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsParticipantResponsible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPlanForClarityBenefitCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsProRated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxRolloverAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumReimbursement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherExpenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReimbursableExpenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleEmployee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleEmployeeChild")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleEmployeeSpouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminatedDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminatedEmployeeRunoutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnusedFundsPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsPlanId");

                    b.ToTable("EmployeeBenefitsHRAs");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsHSA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeBenefitsPlanId")
                        .HasColumnType("int");

                    b.Property<string>("EnrolledEmployee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBulkTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCardIssued")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsEmployerContribution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsFullBalanceAdvance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsOfferHSA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPayrollAdvance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsSpouseOrDependent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepaymentAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsPlanId")
                        .IsUnique();

                    b.ToTable("EmployeeBenefitsHSAs");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsLPFSA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActiveEmployeeRunoutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowCarryOver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowGracePeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeBenefitsFSAId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerContribution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCustomizePlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsLPFSAChecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsStandardPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsTestAllowCarryOver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsTestAllowGracePeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsTestStandardPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxAnnualElectionAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinAnnualElectionAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherOptionForActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherOptionForTerminated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunOutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminatedEmployeeCoverageEndPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminatedEmployeeRunoutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsFSAId")
                        .IsUnique();

                    b.ToTable("EmployeeBenefitsLPFSAs");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("IsMidYearPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPriorYearPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsSamePlanEligibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("EmployeeBenefitsPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsSmartRide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeBenefitsPlanId")
                        .HasColumnType("int");

                    b.Property<string>("IsParkingAddPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsParkingChecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsParkingPostTax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsTransitAddPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsTransitChecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsTransitPostTax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherOptionForParking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherOptionForTransit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkingOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkingPreTax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkingRunoutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkingStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransitOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransitPreTax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransitRunoutPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransitStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsPlanId")
                        .IsUnique();

                    b.ToTable("EmployeeBenefitsSmartRides");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeContributionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EligibilityContigent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeBenefitsHSAId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeChildContribution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeSpouseContribution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyContribution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SingleContribution")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsHSAId");

                    b.ToTable("EmployerContributionGroups");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeGroups");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EnrolledEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnrolledEmployees");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.HRAReimbursableExpenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HRAReimbursableExpenses");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.InformationProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InformationProviderName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InformationProviders");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.MidYearPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeBenefitsPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Plan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsPlanId");

                    b.ToTable("MidYearPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.PayScheduleFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PayScheduleFrequencies");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.PayScheduleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeBenefitsPlanId")
                        .HasColumnType("int");

                    b.Property<string>("FirstPaycheckDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayScheduleFrequency")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsPlanId");

                    b.ToTable("PayScheduleTypes");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.PayrollProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PayrollProviderName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PayrollProviders");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.PayrollVendorName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PayrollVendorNames");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.PlanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EligibilityDefinition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeBenefitsPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherOptionEligibilityDefinition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsPlanId");

                    b.ToTable("PlanTypes");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.PriorYearPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeBenefitsPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Plan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBenefitsPlanId");

                    b.ToTable("PriorYearPlans");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.RunoutPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RunoutPeriods");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.TerminatedEmployeeCoverageEndPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TerminatedEmployeeCoverageEndPeriods");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.TerminatedEmployeeRunoutPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TerminatedEmployeeRunoutPeriods");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Address", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithOne("Address")
                        .HasForeignKey("ClarityImplementation.API.Models.Address", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.AffiliatedCompany", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithMany("AffiliatedCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.AffiliatedCompanyDivision", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.AffiliatedCompany", "AffiliatedCompany")
                        .WithMany("AffiliatedCompanyDivisions")
                        .HasForeignKey("AffiliatedCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AffiliatedCompany");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.AffiliatedCompanyDivisionFundingFile", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.AffiliatedCompanyDivision", "AffiliatedCompanyDivision")
                        .WithMany("AffiliatedCompanyDivisionFundingFiles")
                        .HasForeignKey("AffiliatedCompanyDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AffiliatedCompanyDivision");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.AffiliatedCompanyFundingFile", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.AffiliatedCompany", "AffiliatedCompany")
                        .WithMany("AffiliatedCompanyFundingFiles")
                        .HasForeignKey("AffiliatedCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AffiliatedCompany");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Api_Case_Contact", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithMany("Api_Case_Contacts")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.BrokerContact", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.CompanyContact", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.CompanyDetails", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithOne("CompanyDetails")
                        .HasForeignKey("ClarityImplementation.API.Models.CompanyDetails", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.CompanyDivision", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithMany("CompanyDivisions")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.CompanyDivisionFundingFile", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.CompanyDivision", "CompanyDivision")
                        .WithMany("CompanyDivisionFundingFiles")
                        .HasForeignKey("CompanyDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyDivision");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.CompanyStatus", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Event.CalendlyEvent", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithOne("CalendlyEvent")
                        .HasForeignKey("ClarityImplementation.API.Models.Event.CalendlyEvent", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.CobraBenefit", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.FileUpload.EmployeeBenefitsFileUpload", "EmployeeBenefitsFileUpload")
                        .WithMany("CobraBenefits")
                        .HasForeignKey("EmployeeBenefitsFileUploadId");

                    b.Navigation("EmployeeBenefitsFileUpload");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.CobraFileUpload", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.FileUpload.CobraBenefit", "CobraBenefit")
                        .WithMany("CobraFileUploads")
                        .HasForeignKey("CobraBenefitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CobraBenefit");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.EmployeeBenefit", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.FileUpload.EmployeeBenefitsFileUpload", "EmployeeBenefitsFileUpload")
                        .WithMany("EmployeeBenefits")
                        .HasForeignKey("EmployeeBenefitsFileUploadId");

                    b.Navigation("EmployeeBenefitsFileUpload");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.EmployeeBenefitsFileUpload", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithOne("EmployeeBenefitsFileUpload")
                        .HasForeignKey("ClarityImplementation.API.Models.FileUpload.EmployeeBenefitsFileUpload", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.EmployeeBenefitsFileUploadItem", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.FileUpload.EmployeeBenefit", "EmployeeBenefit")
                        .WithMany("EmployeeBenefitsFileUploadItems")
                        .HasForeignKey("EmployeeBenefitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefit");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Funding.COBRAFunding", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithOne("COBRAFunding")
                        .HasForeignKey("ClarityImplementation.API.Models.Funding.COBRAFunding", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Funding.COBRAFundingFile", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Funding.COBRAFunding", "COBRAFunding")
                        .WithMany("COBRAFundingFiles")
                        .HasForeignKey("CobraFundingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAFunding");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Funding.EmployeeBenefitsFunding", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithOne("EmployeeBenefitsFunding")
                        .HasForeignKey("ClarityImplementation.API.Models.Funding.EmployeeBenefitsFunding", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Funding.EmployeeBenefitsFundingFile", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Funding.EmployeeBenefitsFunding", "EmployeeBenefitsFunding")
                        .WithMany("EmployeeBenefitsFundingFiles")
                        .HasForeignKey("EmployeeBenefitsFundingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsFunding");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.PageMetaDataField", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Page", "Page")
                        .WithMany("PageMetaDataFields")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRABrokerContact", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.EnrollmentAndEligibilityContact", "EnrollmentAndEligibilityContact")
                        .WithMany()
                        .HasForeignKey("EnrollmentAndEligibilityContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnrollmentAndEligibilityContact");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAClientContact", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.EnrollmentAndEligibilityContact", "EnrollmentAndEligibilityContact")
                        .WithMany()
                        .HasForeignKey("EnrollmentAndEligibilityContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnrollmentAndEligibilityContact");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRADentalPlan", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", "COBRAPlan")
                        .WithMany("COBRADentalPlans")
                        .HasForeignKey("COBRAPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAEAPPlan", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", "COBRAPlan")
                        .WithMany("COBRAEAPPlans")
                        .HasForeignKey("COBRAPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAFSAPlan", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", "COBRAPlan")
                        .WithMany("COBRAFSAPlans")
                        .HasForeignKey("COBRAPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAHRAPlan", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", "COBRAPlan")
                        .WithMany("COBRAHRAPlans")
                        .HasForeignKey("COBRAPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAInsurancePlan", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", "COBRAPlan")
                        .WithMany("COBRAInsurancePlans")
                        .HasForeignKey("COBRAPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAMedicalPlan", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", "COBRAPlan")
                        .WithMany("COBRAMedicalPlans")
                        .HasForeignKey("COBRAPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithOne("COBRAPlan")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAVisionPlan", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", "COBRAPlan")
                        .WithMany("COBRAVisionPlans")
                        .HasForeignKey("COBRAPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.CobraGeneralInformation", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", "COBRAPlan")
                        .WithOne("CobraGeneralInformation")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.COBRA.CobraGeneralInformation", "COBRAPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.CobraOpenEnrollmentManagement", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", "COBRAPlan")
                        .WithOne("CobraOpenEnrollmentManagement")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.COBRA.CobraOpenEnrollmentManagement", "COBRAPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.DentalCoverageRate", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRADentalPlan", "COBRADentalPlan")
                        .WithMany("DentalCoverageRates")
                        .HasForeignKey("COBRADentalPlanId");

                    b.Navigation("COBRADentalPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.EAPCoverageRate", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAEAPPlan", "COBRAEAPPlan")
                        .WithMany("EAPCoverageRates")
                        .HasForeignKey("COBRAEAPPlanId");

                    b.Navigation("COBRAEAPPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.EnrollmentAndEligibilityContact", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", "COBRAPlan")
                        .WithOne("EnrollmentAndEligibilityContact")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.COBRA.EnrollmentAndEligibilityContact", "COBRAPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.FSACoverageRate", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAFSAPlan", "COBRAFSAPlan")
                        .WithMany("FSACoverageRates")
                        .HasForeignKey("COBRAFSAPlanId");

                    b.Navigation("COBRAFSAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.HRACoverageRate", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAHRAPlan", "COBRAHRAPlan")
                        .WithMany("HRACoverageRates")
                        .HasForeignKey("COBRAHRAPlanId");

                    b.Navigation("COBRAHRAPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.InsurancePlanCoverageRate", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAInsurancePlan", "COBRAInsurancePlan")
                        .WithMany("InsurancePlanCoverageRates")
                        .HasForeignKey("COBRAInsurancePlanId");

                    b.Navigation("COBRAInsurancePlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.MedicalPlanCoverageRate", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAMedicalPlan", "COBRAMedicalPlan")
                        .WithMany("MedicalPlanCoverageRates")
                        .HasForeignKey("COBRAMedicalPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COBRAMedicalPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.VisionCoverageRate", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.COBRA.COBRAVisionPlan", "COBRAVisionPlan")
                        .WithMany("VisionCoverageRates")
                        .HasForeignKey("COBRAVisionPlanId");

                    b.Navigation("COBRAVisionPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsDCA", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsFSA", "EmployeeBenefitsFSA")
                        .WithOne("EmployeeBenefitsDCA")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.EmployeeBenefitsDCA", "EmployeeBenefitsFSAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsFSA");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsEnrollment", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", "EmployeeBenefitsPlan")
                        .WithOne("EmployeeBenefitsEnrollment")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.EmployeeBenefitsEnrollment", "EmployeeBenefitsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsFSA", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", "EmployeeBenefitsPlan")
                        .WithOne("EmployeeBenefitsFSA")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.EmployeeBenefitsFSA", "EmployeeBenefitsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsGeneralInformation", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", "EmployeeBenefitsPlan")
                        .WithOne("EmployeeBenefitsGeneralInformation")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.EmployeeBenefitsGeneralInformation", "EmployeeBenefitsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsHRA", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", "EmployeeBenefitsPlan")
                        .WithMany("EmployeeBenefitsHRAs")
                        .HasForeignKey("EmployeeBenefitsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsHSA", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", "EmployeeBenefitsPlan")
                        .WithOne("EmployeeBenefitsHSA")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.EmployeeBenefitsHSA", "EmployeeBenefitsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsLPFSA", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsFSA", "EmployeeBenefitsFSA")
                        .WithOne("EmployeeBenefitsLPFSA")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.EmployeeBenefitsLPFSA", "EmployeeBenefitsFSAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsFSA");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Company", "Company")
                        .WithOne("EmployeeBenefitsPlan")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsSmartRide", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", "EmployeeBenefitsPlan")
                        .WithOne("EmployeeBenefitsSmartRide")
                        .HasForeignKey("ClarityImplementation.API.Models.Plans.EmployeeBenefitsSmartRide", "EmployeeBenefitsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeContributionGroup", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsHSA", "EmployeeBenefitsHSA")
                        .WithMany("EmployeeContributionGroups")
                        .HasForeignKey("EmployeeBenefitsHSAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsHSA");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.MidYearPlan", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", "EmployeeBenefitsPlan")
                        .WithMany("MidYearPlans")
                        .HasForeignKey("EmployeeBenefitsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.PayScheduleType", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", "EmployeeBenefitsPlan")
                        .WithMany("PayScheduleTypes")
                        .HasForeignKey("EmployeeBenefitsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.PlanType", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", "EmployeeBenefitsPlan")
                        .WithMany("PlanTypes")
                        .HasForeignKey("EmployeeBenefitsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.PriorYearPlan", b =>
                {
                    b.HasOne("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", "EmployeeBenefitsPlan")
                        .WithMany("PriorYearPlans")
                        .HasForeignKey("EmployeeBenefitsPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBenefitsPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.AffiliatedCompany", b =>
                {
                    b.Navigation("AffiliatedCompanyDivisions");

                    b.Navigation("AffiliatedCompanyFundingFiles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.AffiliatedCompanyDivision", b =>
                {
                    b.Navigation("AffiliatedCompanyDivisionFundingFiles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Company", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("AffiliatedCompanies");

                    b.Navigation("Api_Case_Contacts");

                    b.Navigation("COBRAFunding");

                    b.Navigation("COBRAPlan");

                    b.Navigation("CalendlyEvent");

                    b.Navigation("CompanyDetails");

                    b.Navigation("CompanyDivisions");

                    b.Navigation("EmployeeBenefitsFileUpload");

                    b.Navigation("EmployeeBenefitsFunding");

                    b.Navigation("EmployeeBenefitsPlan");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.CompanyDivision", b =>
                {
                    b.Navigation("CompanyDivisionFundingFiles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.CobraBenefit", b =>
                {
                    b.Navigation("CobraFileUploads");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.EmployeeBenefit", b =>
                {
                    b.Navigation("EmployeeBenefitsFileUploadItems");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.FileUpload.EmployeeBenefitsFileUpload", b =>
                {
                    b.Navigation("CobraBenefits");

                    b.Navigation("EmployeeBenefits");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Funding.COBRAFunding", b =>
                {
                    b.Navigation("COBRAFundingFiles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Funding.EmployeeBenefitsFunding", b =>
                {
                    b.Navigation("EmployeeBenefitsFundingFiles");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Page", b =>
                {
                    b.Navigation("PageMetaDataFields");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRADentalPlan", b =>
                {
                    b.Navigation("DentalCoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAEAPPlan", b =>
                {
                    b.Navigation("EAPCoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAFSAPlan", b =>
                {
                    b.Navigation("FSACoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAHRAPlan", b =>
                {
                    b.Navigation("HRACoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAInsurancePlan", b =>
                {
                    b.Navigation("InsurancePlanCoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAMedicalPlan", b =>
                {
                    b.Navigation("MedicalPlanCoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAPlan", b =>
                {
                    b.Navigation("COBRADentalPlans");

                    b.Navigation("COBRAEAPPlans");

                    b.Navigation("COBRAFSAPlans");

                    b.Navigation("COBRAHRAPlans");

                    b.Navigation("COBRAInsurancePlans");

                    b.Navigation("COBRAMedicalPlans");

                    b.Navigation("COBRAVisionPlans");

                    b.Navigation("CobraGeneralInformation");

                    b.Navigation("CobraOpenEnrollmentManagement");

                    b.Navigation("EnrollmentAndEligibilityContact");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.COBRA.COBRAVisionPlan", b =>
                {
                    b.Navigation("VisionCoverageRates");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsFSA", b =>
                {
                    b.Navigation("EmployeeBenefitsDCA");

                    b.Navigation("EmployeeBenefitsLPFSA");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsHSA", b =>
                {
                    b.Navigation("EmployeeContributionGroups");
                });

            modelBuilder.Entity("ClarityImplementation.API.Models.Plans.EmployeeBenefitsPlan", b =>
                {
                    b.Navigation("EmployeeBenefitsEnrollment");

                    b.Navigation("EmployeeBenefitsFSA");

                    b.Navigation("EmployeeBenefitsGeneralInformation");

                    b.Navigation("EmployeeBenefitsHRAs");

                    b.Navigation("EmployeeBenefitsHSA");

                    b.Navigation("EmployeeBenefitsSmartRide");

                    b.Navigation("MidYearPlans");

                    b.Navigation("PayScheduleTypes");

                    b.Navigation("PlanTypes");

                    b.Navigation("PriorYearPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
